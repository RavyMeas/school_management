<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Style x:Key="WindowControlButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F3F4F6"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Name}" Value="btnClose">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                      To="Transparent" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Close Button Hover Style -->
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EF4444"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Replace the close button with this for red hover effect -->
  
    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="20,12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                                CornerRadius="8" 
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#374151"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="secontButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="20,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="10" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#374151"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Search Box Style -->
    <Style x:Key="SearchBoxStyle" TargetType="TextBox">
        <Setter Property="Padding" Value="35,10,10,10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderLight}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                        <Grid>
                            <TextBlock Text="&#xE721;" 
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="16"
                                           Foreground="{StaticResource TextSecondary}"
                                           VerticalAlignment="Center"
                                           Margin="12,0,0,0"/>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Status Badge Style -->
    <Style x:Key="StatusBadgeStyle" TargetType="Border">
        <Setter Property="Background" Value="#D1FAE5"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="12,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- Action Icon Button Style -->
    <Style x:Key="ActionIconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="4,0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MainBg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!-- Card Style -->
    <Style x:Key="CardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardBg}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{StaticResource ShadowColor}" 
                                  ShadowDepth="0" 
                                  BlurRadius="8" 
                                  Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Small Card Style -->
    <Style x:Key="SmallCardStyle" TargetType="Border" BasedOn="{StaticResource CardStyle}">
        <Setter Property="Padding" Value="16"/>
    </Style>

    <!-- Menu Item Style -->
    <Style x:Key="MenuItemStyle" TargetType="Border">
        <Setter Property="Padding" Value="15,12"/>
        <Setter Property="Margin" Value="8,2"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SidebarHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Selected Menu Item Style -->
    <Style x:Key="SelectedMenuItemStyle" TargetType="Border" BasedOn="{StaticResource MenuItemStyle}">
        <Setter Property="Background" Value="{StaticResource SidebarHover}"/>
    </Style>

    <!-- Icon Style -->
    <Style x:Key="IconStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
    </Style>

    <!-- Large Icon Style -->
    <Style x:Key="LargeIconStyle" TargetType="TextBlock" BasedOn="{StaticResource IconStyle}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- Section Header Style -->
    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextTertiary}"/>
        <Setter Property="Margin" Value="20,20,20,8"/>
       
    </Style>

    <!-- Page Title Style -->
    <Style x:Key="PageTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="PageNotImpment" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>

    <!-- Page Subtitle Style -->
    <Style x:Key="PageSubtitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
    </Style>

    <!-- Card Title Style -->
    <Style x:Key="CardTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <!-- Card Subtitle Style -->
    <Style x:Key="CardSubtitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
    </Style>

    <!-- Stat Number Style -->
    <Style x:Key="StatNumberStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Margin" Value="0,12,0,4"/>
    </Style>

    <!-- Stat Label Style -->
    <Style x:Key="StatLabelStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
    </Style>

    <!-- Stat Description Style -->
    <Style x:Key="StatDescriptionStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
    </Style>

    <!-- Icon Badge Style -->
    <Style x:Key="IconBadgeStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!-- Blue Icon Badge -->
    <Style x:Key="BlueIconBadgeStyle" TargetType="Border" BasedOn="{StaticResource IconBadgeStyle}">
        <Setter Property="Background" Value="{StaticResource BlueLightBg}"/>
    </Style>

    <!-- Green Icon Badge -->
    <Style x:Key="GreenIconBadgeStyle" TargetType="Border" BasedOn="{StaticResource IconBadgeStyle}">
        <Setter Property="Background" Value="{StaticResource GreenLightBg}"/>
    </Style>

    <!-- Purple Icon Badge -->
    <Style x:Key="PurpleIconBadgeStyle" TargetType="Border" BasedOn="{StaticResource IconBadgeStyle}">
        <Setter Property="Background" Value="{StaticResource PurpleLightBg}"/>
    </Style>

    <!-- Orange Icon Badge -->
    <Style x:Key="OrangeIconBadgeStyle" TargetType="Border" BasedOn="{StaticResource IconBadgeStyle}">
        <Setter Property="Background" Value="{StaticResource OrangeLightBg}"/>
    </Style>

    <!-- Action Button Base Style -->
    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="8" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Blue Action Button -->
    <Style x:Key="BlueActionButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource BlueHoverBg}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueLightBg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Green Action Button -->
    <Style x:Key="GreenActionButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource GreenHoverBg}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenLightBg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Purple Action Button -->
    <Style x:Key="PurpleActionButtonStyle" TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PurpleHoverBg}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PurpleLightBg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Activity Dot Style -->
    <Style x:Key="ActivityDotStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,6,12,0"/>
    </Style>

    <!-- Activity Text Style -->
    <Style x:Key="ActivityTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!-- Activity Time Style -->
    <Style x:Key="ActivityTimeStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>


    <!-- Color Resources -->
    <SolidColorBrush x:Key="SidebarBg" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="SidebarHover" Color="#F3F4F6"/>
    <SolidColorBrush x:Key="SelectedBg" Color="#1E293B"/>
    <SolidColorBrush x:Key="MainBg" Color="#F9FAFB"/>
    <SolidColorBrush x:Key="TextPrimary" Color="#111827"/>
    <SolidColorBrush x:Key="TextSecondary" Color="#6B7280"/>
    <SolidColorBrush x:Key="TextWhite" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="AccentBlue" Color="#3B82F6"/>

    <!-- Section Header Style -->
    <Style x:Key="SectionHeaderStylee" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="16,20,16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>

    </Style>

    <!-- Base Menu Item Style -->
    <Style x:Key="MenuItemStylee" TargetType="Border">
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Margin" Value="8,2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SidebarHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon Style -->
    <Style x:Key="MenuIconStyle" TargetType="fa:IconImage">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Margin" Value="0,0,12,0"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
    </Style>

    <!-- Menu Item Text Style -->
    <Style x:Key="MenuItemTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Section Expand Icon Style -->
    <Style x:Key="ExpandIconStyle" TargetType="fa:IconImage">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBlue}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>




</ResourceDictionary>